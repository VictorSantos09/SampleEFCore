<MudDialog>
    <DialogContent>
        <MudPaper Class="pa-4">
            <MudForm @ref="_form" @bind-IsValid="@_success">
                <MudTextField T="string" Label="Primeiro Nome" Required="true" @bind-Value="Person.FirstName"
                              Counter="PersonValidator.MaxCharactersAllowedFirstName"
                              MaxLength="PersonValidator.MaxCharactersAllowedFirstName" Immediate="true"
                              Validation="@(new Func<string, IEnumerable<string>>(PersonValidator.MaxDigitsFirstName))"
                              Text="@Person.FirstName" RequiredError="primeiro nome é necessário" />

                <MudTextField T="string" Label="Segundo Nome" Required="true" @bind-Value="Person.LastName"
                              Counter="PersonValidator.MaxCharactersAllowedLastName"
                              MaxLength="PersonValidator.MaxCharactersAllowedLastName" Immediate="true"
                              Validation="@(new Func<string, IEnumerable<string>>(PersonValidator.MaxDigitsLastName))"
                              Text="@Person.LastName" RequiredError="segundo nome é necessário" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="d-block pa-4 mt-4">
            <Button Message="Salvar" BOnClick="@Submit" />
        </MudPaper>

        <div class="mt-5" hidden="@_isHideAlert">
            <MudAlert Severity="Severity.Warning" Variant="Variant.Filled">Os valores não foram alterados</MudAlert>
        </div>
    </DialogContent>
</MudDialog>


@code {
    [Parameter]
    public PersonModel Person { get; set; }
    [Inject]
    private NavigationManager NavigationManager { get; set; }
    [Inject]
    private IService<PersonModel> PersonService { get; set; }
    [Inject]
    private ISnackbar Snackbar { get; set; }
    private bool _success;
    private bool _isHideAlert { get; set; } = true;
    private MudForm _form;
    private string _initialFirstName;
    private string _initialLastName;

    protected override Task OnParametersSetAsync()
    {
        _initialLastName = Person.LastName;
        _initialFirstName = Person.FirstName;
        return Task.CompletedTask;
    }

    private async Task Submit()
    {
        if (Person.FirstName == _initialFirstName && Person.LastName == _initialLastName)
        {
            _isHideAlert = false;
        }
        else
        {
            await _form.Validate();
            if (_form.IsValid)
            {
                Snackbar.Add("Pessoa atualizada", Severity.Success);
                await PersonService.UpdateAsync(Person);
                NavigationManager.NavigateTo(NavigationManager.Uri, true);
            }
        }
    }
}
