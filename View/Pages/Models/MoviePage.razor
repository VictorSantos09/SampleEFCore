@page "/movie"

<PageTitle>Filmes</PageTitle>

<MudContainer Class="pb-10">
    <MudText Typo="Typo.h3">
        Gerenciar Filmes
    </MudText>

    <MudText Typo="Typo.subtitle1">
        Esta página permite que você gerencie os filmes cadastradas no sistema.
    </MudText>
</MudContainer>

<MudContainer Class="mb-5">
    <Button BIcon="@Icons.Filled.Add" Message="Adicionar" BOnClick="() => OpenAddDialog()" />
</MudContainer>

<MudGrid>
    @foreach (var m in _movies)
    {
        <MudItem Class="mb-3" xl="3" lg=6 md="12">
            <MudPaper Elevation="4" Outlined="true">
                <MudCard>
                    <MudCardContent>
                        <MudCardHeader>@m.Title</MudCardHeader>
                        <MudText Typo="Typo.body2">Descrição: @m.Description</MudText>
                        <MudText Typo="Typo.body2">Gênero: @m.Genre.Name</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudIconButton OnClick="() => Delete(m.Id)" Icon="@Icons.Filled.Delete" Color="Color.Error" />
                        <MudIconButton OnClick="() => OpenEditDialog(m)" Icon="@Icons.Filled.Edit" Color="Color.Dark" />

                    </MudCardActions>
                </MudCard>
            </MudPaper>
        </MudItem>
    }
</MudGrid>

@if (_movies.Any() == false)
{
    <MudContainer Class="my-5">
        <MudAlert Severity="Severity.Info">Nenhum filme cadastrado</MudAlert>
    </MudContainer>
}

@code {
    [Inject]
    private IService<MovieModel> MovieService { get; set; }
    [Inject]
    private IDialogService DialogService { get; set; }
    [Inject]
    public IService<GenreModel> GenreService { get; set; }
    private IEnumerable<MovieModel> _movies = new List<MovieModel>();
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        _movies = await MovieService.GetAllAsync();
        _isLoading = false;
    }
    private async Task Delete(int id)
    {
        await MovieService.DeleteAsync(id);
        await OnInitializedAsync();
    }

    private void OpenAddDialog()
    {
        DialogOptions options = new DialogOptions()
            {
                CloseButton = true,
                DisableBackdropClick = true,
                MaxWidth = MaxWidth.Large,
                FullWidth = true
            };
        DialogService.Show<AddMovieDialog>("Adicionar Filme", options);
    }

    private async Task OpenEditDialog(MovieModel movie)
    {
        DialogOptions options = new DialogOptions()
            {
                CloseButton = true,
                DisableBackdropClick = true,
                MaxWidth = MaxWidth.Large,
                FullWidth = true
            };
        var genres = await GenreService.GetAllAsync();
        DialogParameters parameters = new();
        parameters.Add("Movie", movie);
        parameters.Add("Genres", genres);

        DialogService.Show(typeof(EditMovieDialog), "Editar Filme", parameters, options);
    }
}
