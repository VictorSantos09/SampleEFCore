@inject IDialogService _dialogService
@inject PersonService _service
@inject NavigationManager _navManager
@using System.ComponentModel.DataAnnotations

<MudDialog>
    <DialogContent>
        <MudPaper Class="pa-4">
            <MudForm @ref="_form" @bind-IsValid="@_success">
                <MudTextField T="string" Label="Primeiro Nome" Required="true" @bind-Value="FirstName"
                              Counter="45" MaxLength="45" Immediate="true"
                              Validation="@(new Func<string, IEnumerable<string>>(PersonValidator.MaxDigitsFirstName))" RequiredError="Primeiro nome é necessário" />

                <MudTextField T="string" Label="Segundo Nome" Required="true" @bind-Value="LastName"
                              Counter="45" MaxLength="45" Immediate="true"
                              Validation="@(new Func<string, IEnumerable<string>>(PersonValidator.MaxDigitsLastName))" RequiredError="Segundo nome é necessário" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="d-block pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(() => Submit())">Salvar</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(() => _form.ResetAsync())" Class="mx-2">Apagar Dados</MudButton>
        </MudPaper>
    </DialogContent>
</MudDialog>

@code {
    private bool _success;
    private MudForm _form;
    private string LastName;
    private string FirstName;

    private async Task Submit()
    {
        await _form.Validate();
        if (_form.IsValid)
        {
            PersonModel person = new(FirstName, LastName);
            _ = await _service.CreateAsync(person);
            _navManager.NavigateTo(_navManager.Uri, true);
        }
    }
}
