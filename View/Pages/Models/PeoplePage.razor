@page "/people"

<PageTitle>Pessoas</PageTitle>

<div class="mb-5">
<Button Message="Adicionar" BIcon="@Icons.Material.Filled.Add" BOnClick="OpenAddDialog" />
</div>

@foreach (var p in _people)
{
    <MudCard Class="mt-5">
        <MudCardContent>
            <MudText>@p.FirstName</MudText>
            <MudText Typo="Typo.body2">Nome Completo: @p.FullName</MudText>
            <MudText Typo="Typo.body2">ID: @p.Id</MudText>
        </MudCardContent>
        <MudCardActions>
            <Button BVariant="Variant.Text" BColorBackground="@null" BColorText="@Colors.Blue.Default" 
            Message="Editar" BOnClick="() => OpenEditDialog(p)" />
            <Button BVariant="Variant.Text" BColorBackground="@null" BColorText="@Colors.Red.Default" 
            Message="Remover" BOnClick="() => Delete(p.Id)" />
        </MudCardActions>
    </MudCard>
}

@if (_people.Any() == false)
{
    <MudAlert Severity="Severity.Info">Nenhuma pessoa cadastrada</MudAlert>
}

@code {
    [Inject]
    private IService<PersonModel> PersonService { get; set; }
    [Inject]
    private IDialogService DialogService { get; set; }
    [Inject]
    private NavigationManager NavigationManager { get; set; }
    private IEnumerable<PersonModel> _people = new List<PersonModel>();

    protected override async Task OnInitializedAsync()
    {
        _people = await PersonService.GetAllAsync();
    }

    private void OpenAddDialog()
    {
        DialogOptions options = new() { CloseButton = true };
        DialogService.Show(typeof(AddPersonDialog), "Cadastrar Pessoa", options);
    }

    private void OpenEditDialog(PersonModel person)
    {
        DialogParameters parameters = new();
        parameters.Add("Person", person);

        DialogOptions options = new() { CloseButton = true };
        DialogService.Show(typeof(EditPersonDialog), "Editar Pessoa", parameters, options);
    }

    private async Task Delete(int id)
    {
        await PersonService.DeleteAsync(id);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
